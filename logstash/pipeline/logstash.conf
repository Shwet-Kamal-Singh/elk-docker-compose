# Input section: Define the input plugin to read data
input {
  # File input plugin to read from a log file
  file {
    path => "/usr/share/logstash/logs/logstash.log"  # Path to the log file
    start_position => "beginning"  # Start reading from the beginning of the file
    sincedb_path => "/dev/null"  # Disable sincedb to read the file from the beginning each time
  }

  # Beats input plugin to receive data from Beats (e.g., Filebeat)
  beats {
    port => 5044  # Port to listen on for incoming Beats data
    ssl => true  # Enable SSL
    ssl_certificate => "/usr/share/logstash/config/certs/fullchain.pem"  # Path to SSL certificate
    ssl_key => "/usr/share/logstash/config/certs/privkey.pem"  # Path to SSL key
  }
}

# Filter section: Define how to process the data
filter {
  # Grok filter plugin to parse unstructured log data into structured fields
  grok {
    match => { "message" => "%{COMBINEDAPACHELOG}" }  # Parse Apache access logs using predefined pattern
  }

  # Date filter plugin to parse and set the event timestamp
  date {
    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]  # Match timestamp pattern in log
    target => "@timestamp"  # Set parsed timestamp as the event's @timestamp field
  }

  # GeoIP filter plugin to add geographical information based on IP address
  geoip {
    source => "clientip"  # Source field containing the IP address
    target => "geoip"  # Target field to store the GeoIP information
  }
}

# Output section: Define where to send the processed data
output {
  # Elasticsearch output plugin to send data to Elasticsearch
  elasticsearch {
    hosts => ["https://elasticsearch:9200"]  # Elasticsearch URL
    index => "logs-%{+YYYY.MM.dd}"  # Index name with daily rotation
    ssl => true  # Enable SSL
    cacert => "/usr/share/logstash/config/certs/fullchain.pem"  # Path to CA certificate
    user => "elastic"  # Elasticsearch username
    password => "changeme"  # Elasticsearch password (change this to your actual password)
  }

  # Stdout output plugin to output data to the console (for debugging)
  stdout {
    codec => rubydebug  # Use rubydebug codec to pretty-print events
  }
}
